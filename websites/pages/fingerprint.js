import { useEffect } from "react";
import { getFingerprint } from "../utils/fingerprint";
import { db } from "../db/firebase";
import { doc, setDoc } from "firebase/firestore";

export async function getServerSideProps({ req }) {
    const forwarded = req.headers["x-forwarded-for"];
    const ip = forwarded
        ? forwarded.split(/, /)[0]
        : req.connection.remoteAddress;
    return {
        props: {
            ip,
        },
    };
}

export default function Fingerprint({ ip }) {
    useEffect(() => {
        const fetchFingerprint = async () => {
            const fingerprint = await getFingerprint();
            console.log("Device Fingerprint:", fingerprint);

            const docRef = doc(db, "fingerprints", fingerprint);

            const userInfo = {
                timestamp: new Date(),
                userAgent: navigator.userAgent,
                os: navigator.platform,
                screenSize: `${window.screen.width}x${window.screen.height}`,
                hardwareConcurrency: navigator.hardwareConcurrency || "N/A",
                deviceMemory: navigator.deviceMemory || "N/A",
                colorDepth: window.screen.colorDepth,
                language: navigator.language,
                timezone: Intl.DateTimeFormat().resolvedOptions().timeZone,
                online: navigator.onLine,
                touchSupport: "ontouchstart" in window,
                referrer: document.referrer || "Direct",
                ip,
                cookiesEnabled: navigator.cookieEnabled,
                localStorage: typeof window.localStorage !== "undefined",
                sessionStorage: typeof window.sessionStorage !== "undefined",
                browserName: navigator.appName,
                browserVersion: navigator.appVersion,
                doNotTrack: navigator.doNotTrack || "unspecified",
            };

            // Replace all undefined values with null
            Object.keys(userInfo).forEach((key) => {
                if (userInfo[key] === undefined) {
                    userInfo[key] = null;
                }
            });

            console.log("User Info:", userInfo);

            try {
                await setDoc(docRef, {
                    userInfo,
                });
                console.log("Document written with ID: ", docRef.id);
            } catch (error) {
                console.error("Error adding document: ", error);
            }
        };

        fetchFingerprint();
    }, []);

    return (
        <>
            <h1>Fingerprint</h1>
            <p>
                Fingerprint is a unique identifier generated by the web browser
                when a user visits a website. Fingerprinting is a technique used
                to track users across websites without using cookies
            </p>
        </>
    );
}
